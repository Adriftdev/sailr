name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Release - ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    strategy:
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-20.04
            release_for: linux_x86_64
            target: x86_64-unknown-linux-musl
            bin: ubi
            name: ubi-Linux-x86_64-musl.tar.gz
            cross: true
            cargo_command: cargo
            
          - os_name: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: ubi
            name: ubi-Darwin-aarch64.tar.gz
            skip_tests: true
            
        toolchain:
          - stable
          - beta
          - nightly

    runs-on: ${{ matrix.platform.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Configure Git
        run: |
          git config --global user.email "joshua.tracey08@gmail.com"
          git config --global user.name "Joshua Tracey"
          
      - name: Install tools
        shell: bash
        run: sudo apt install musl-tools
        
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--locked --release"
          strip: true
          
      - name: Build binary (*nix)
        shell: bash
        run: |
          ${{ matrix.platform.cargo_command }} build --locked --release --target ${{ matrix.platform.target }}          
        if: ${{ !contains(matrix.platform.os, 'windows') }}
        
      - name: Strip binary
        shell: bash
        run: |
          strip target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}          
        # strip doesn't work with cross-arch binaries on Linux or Windows.
        if: ${{ !(matrix.platform.cross || matrix.platform.target == 'aarch64-pc-windows-msvc') }}

      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          fi
          cd -     
          
      - name: Publish release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ubi-${{ matrix.platform.os_name }}
          path: "ubi*"
        if: github.ref == 'refs/tags/test-release'
        
      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "ubi*"
          body_path: Changes.md
        if: startsWith( github.ref, 'refs/tags/v' )
